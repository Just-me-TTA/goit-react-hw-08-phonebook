{"version":3,"file":"static/js/357.f237f2c4.chunk.js","mappings":"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","sources":["components/Form.styled.jsx","hooks/useAutoClearAuthError.js","components/RegisterForm/RegisterForm.jsx","pages/RegistrationPage/RegistrationPage.jsx","../node_modules/yup-password/index.js"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-family: 'Megrim';\n  font-weight: normal;\n  font-size: 48px;\n  margin-bottom: 24px;\n  animation: pulsate 1.5s infinite alternate;\n\n  @media screen and (max-width: 639px) {\n    font-size: 28px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin: 32px auto 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 480px;\n  border: 2px solid var(--basic-white);\n  border-radius: 12px;\n  padding: 40px 32px;\n  box-shadow: 0 0 0.2rem var(--basic-white), 0 0 0.2rem var(--basic-white),\n    0 0 2rem var(--basic-color), 0 0 0.8rem var(--basic-color),\n    0 0 2.8rem var(--basic-color), inset 0 0 1.3rem var(--basic-color);\n  background-color: #0000007e;\n\n  @media screen and (max-width: 639px) {\n    width: 280px;\n    padding: 32px 8px 24px 8px;\n  }\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  width: 400px;\n\n  @media screen and (max-width: 639px) {\n    width: 220px;\n  }\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 639px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 10px 0;\n  font-size: 20px;\n  color: var(--basic-color);\n  pointer-events: none;\n  transition: 0.5s;\n\n  @media screen and (max-width: 639px) {\n    padding: 12px 0;\n    font-size: 14px;\n  }\n`;\n\nexport const Border = styled.span`\n  position: absolute;\n  bottom: 30px;\n  left: 50%;\n  width: 0;\n  height: 1px;\n  background-color: var(--basic-white);\n  box-shadow: 0 0 0.2rem var(--basic-white), 0 0 0.2rem var(--basic-white),\n    0 0 2rem var(--basic-color), 0 0 0.8rem var(--basic-color),\n    0 0 2.8rem var(--basic-color), inset 0 0 1.3rem var(--basic-color);\n  transition: 0.4s;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 20px;\n  color: var(--basic-color);\n  margin-bottom: 30px;\n  border: none;\n  border-bottom: 1px solid var(--lighter-color);\n  outline: none;\n  background: transparent;\n\n  &:focus ~ ${Label}, &:valid ~ ${Label} {\n    top: -20px;\n    left: 0;\n    color: var(--lighter-color);\n    font-size: 12px;\n  }\n\n  &:focus ~ ${Border}, &:valid ~ ${Border} {\n    width: 100%;\n    transition: 0.4s;\n    left: 0;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 20px 0;\n  font-family: inherit;\n  color: var(--basic-white);\n  width: 200px;\n  height: 32px;\n  padding: 4px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  color: var(--basic-color);\n  border: 1px solid var(--basic-color);\n  box-shadow: 0 0 5px var(--basic-color), 0 0 5px var(--basic-color) inset;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background: var(--darker-color);\n    box-shadow: 0 0 20px var(--darker-color);\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: var(--basic-white);\n  }\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  &:active {\n    top: 2px;\n    text-shadow: 0 0 10px var(--basic-white);\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  width: 80%;\n  color: var(--accent-color);\n  text-shadow: 0 0 10px var(--basic-white);\n  text-align: center;\n  margin-bottom: 8px;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n  @media screen and (max-width: 639px) {\n    width: 200px;\n  }\n`;\n\nexport const AuthError = styled.p`\n  width: 80%;\n  color: var(--accent-color);\n  text-shadow: 0 0 10px var(--basic-white);\n  text-align: center;\n  margin-bottom: 8px;\n\n  @media screen and (max-width: 639px) {\n    width: 200px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthError } from '../redux/auth/selectors';\nimport { useEffect } from 'react';\nimport { clearAuthError } from '../redux/auth/authSlice';\n\nexport const useAutoClearAuthError = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(clearAuthError());\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [error, dispatch]);\n\n  return error;\n};\n","import * as yup from 'yup';\nimport YupPassword from 'yup-password';\nimport { Formik } from 'formik';\nimport {\n  AuthError,\n  Border,\n  Button,\n  ErrorMessageStyled,\n  FormStyled,\n  FormTitle,\n  Input,\n  InputBox,\n  Label,\n  Wrapper,\n} from '../Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { useAutoClearAuthError } from 'hooks/useAutoClearAuthError';\n\nYupPassword(yup);\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().min(3).max(30).required('A name is required'),\n  email: yup\n    .string()\n    .email('Please enter valid email')\n    .required('An email is required'),\n  password: yup\n    .string()\n    .password('Please enter valid password')\n    .min(\n      8,\n      'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special'\n    )\n    .minLowercase(1, 'Password must contain at least 1 lower case letter')\n    .minUppercase(1, 'Password must contain at least 1 upper case letter')\n    .minNumbers(1, 'Password must contain at least 1 number')\n    .minSymbols(1, 'Password must contain at least 1 special character')\n    .required('A password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const error = useAutoClearAuthError();\n\n  const handleSubmit = (userData, { resetForm }) => {\n    dispatch(register(userData));\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormTitle>Sign up now</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <InputBox>\n            <Input type=\"text\" name=\"name\" required />\n            <Label htmlFor=\"name\">Name</Label>\n            <Border></Border>\n          </InputBox>\n\n          <InputBox>\n            <Input type=\"email\" name=\"email\" required />\n            <Label htmlFor=\"email\">Email</Label>\n            <Border></Border>\n          </InputBox>\n\n          <InputBox>\n            <Input type=\"password\" name=\"password\" required />\n            <Label htmlFor=\"password\">Password</Label>\n            <Border></Border>\n          </InputBox>\n\n          <Button type=\"submit\" aria-label=\"register\">\n            Register\n          </Button>\n\n          <ErrorMessageStyled name=\"name\" component=\"div\" />\n          <ErrorMessageStyled name=\"email\" component=\"div\" />\n          <ErrorMessageStyled name=\"password\" component=\"div\" />\n        </FormStyled>\n      </Formik>\n      {error && (\n        <AuthError>\n          Registration faled :( Please check your data or try again later\n        </AuthError>\n      )}\n    </Wrapper>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegistrationPage = () => {\n  return <RegisterForm />;\n};\nexport default RegistrationPage;\n","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["FormTitle","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","InputBox","_templateObject3","FormStyled","Form","_templateObject4","Label","_templateObject5","Border","_templateObject6","Input","Field","_templateObject7","Button","_templateObject8","ErrorMessageStyled","ErrorMessage","_templateObject9","AuthError","_templateObject10","useAutoClearAuthError","dispatch","useDispatch","error","useSelector","selectAuthError","useEffect","timer","setTimeout","clearAuthError","clearTimeout","YupPassword","yup","initialValues","name","email","password","validationSchema","shape","min","max","required","minLowercase","minUppercase","minNumbers","minSymbols","RegisterForm","_jsxs","children","_jsx","Formik","onSubmit","handleSubmit","userData","_ref","resetForm","register","type","htmlFor","component","RegistrationPage","p","word","num","concat","isNullOrUndefined","value","undefined","length","arguments","message","msg","this","test","exclusive","params","match","minRepeating","RegExp","minWords","rx","split","filter","v","module","exports","addMethod","string"],"sourceRoot":""}